"use strict";(self.webpackChunkcontrast_dev=self.webpackChunkcontrast_dev||[]).push([[9559],{3905:function(t,e,n){n.d(e,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var u=r.createContext({}),c=function(t){var e=r.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},l=function(t){var e=c(t.components);return r.createElement(u.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,u=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),d=c(n),f=o,y=d["".concat(u,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(y,a(a({ref:e},l),{},{components:n})):r.createElement(y,a({ref:e},l))}));function f(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var u in e)hasOwnProperty.call(e,u)&&(s[u]=e[u]);s.originalType=t,s.mdxType="string"==typeof t?t:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7463:function(t,e,n){n.r(e),n.d(e,{assets:function(){return l},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={title:"Continuous Security",sidebar_position:1},u=void 0,c={unversionedId:"contrast-platform/keep-going/index",id:"contrast-platform/keep-going/index",title:"Continuous Security",description:"Once basic security monitoring and detection are in place, the next steps are:",source:"@site/docs/contrast-platform/keep-going/index.md",sourceDirName:"contrast-platform/keep-going",slug:"/contrast-platform/keep-going/",permalink:"/docs/contrast-platform/keep-going/",editUrl:"https://github.com/contrastsecurity/developer.contrastsecurity.com/blob/master/docs/contrast-platform/keep-going/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Continuous Security",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"How Static Analysis Works",permalink:"/docs/contrast-platform/how-it-works/how-static-works"},next:{title:"Look at Results",permalink:"/docs/contrast-platform/keep-going/look-at-results"}},l={},p=[{value:"Continuous Build Security",id:"continuous-build-security",level:2},{value:"Continuous Test Security",id:"continuous-test-security",level:2}],d={toc:p};function f(t){var e=t.components,n=(0,o.Z)(t,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Once basic security monitoring and detection are in place, the next steps are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Looking at results, scoping where to get started on security."),(0,i.kt)("li",{parentName:"ul"},"Integrating security results with other systems, streamlining the process in CI/CD, Defect Tracking, and other tools.")),(0,i.kt)("h2",{id:"continuous-build-security"},"Continuous Build Security"),(0,i.kt)("p",null,"Security of composition analysis (SBOM) and static analysis are best done within Continuous Integration servers or on pull requests. The easiest approach for continuous security is:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Integrate the analyzer at your right point, CI build for SBOM or pull request / nightly build for static analysis."),(0,i.kt)("li",{parentName:"ul"},"Integrate new Critical issues into defect tracking systems automatically."),(0,i.kt)("li",{parentName:"ul"},"Let the analyzer's re-scans verify fixes.")),(0,i.kt)("h2",{id:"continuous-test-security"},"Continuous Test Security"),(0,i.kt)("p",null,"Continuous security of integrated analysis means that an agent is present in each test environment to detect new issues and identify which have been properly corrected."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Automate the addition of the integrated analyzer when the application is packaged or deployed, most often in CI."),(0,i.kt)("li",{parentName:"ul"},"Integrate new Critical issues into defect tracking automatically."),(0,i.kt)("li",{parentName:"ul"},"Let auto-remediation close anything previously fixed.")))}f.isMDXComponent=!0}}]);